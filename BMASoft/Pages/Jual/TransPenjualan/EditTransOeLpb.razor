@page "/EditTransOeLpb/{id:int}"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager navigationmanager
@inject BMASoft.Services.IInventoryService serviceInv
@inject BMASoft.Services.ISalesService service
@inject BMASoft.Services.IReceivableService serviceAR
@using Newtonsoft.Json
@inject Microsoft.JSInterop.IJSRuntime JS


<style>
    .e-edit-icon::before {
        content: '\ea9a';
    }

    .e-delete-icon::before {
        content: '\e94a';
    }

    .e-add-icon::before {
        content: '\e7f9';
    }

    .e-save-icon::before {
        content: '\e735';
    }

    .form-message {
        padding: 0.5rem;
        font-weight: 700;
    }

    #toast_default .e-meeting::before {
        content: "\e705";
        font-size: 17px;
    }

    .bootstrap4 #toast_default .e-meeting::before {
        content: "\e763";
        font-size: 20px;
    }
</style>



<div class="container">
    <div class="master">
        <a href="/TransOeLpb">Back</a>

        <div class="row">
            <div class="col-7">
                <h2>Edit Penjualan</h2>
            </div>

            <div class="col-5 float-right">
                <h2 style="color:blue">@Transh.NoLpb</h2>
            </div>
        </div>

        <EditForm Model="@Transh" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <div class=" row float-md-right">
                <SfButton CssClass="e-primary" IconCss="e-icons e-save-icon" Type="submit">Simpan</SfButton>
            </div>

            <div class="form-group">
                <SfDatePicker TValue="DateTime" @bind-Value="Transh.Tanggal" Placeholder="Tanggal" FloatLabelType="FloatLabelType.Auto" Format="dd-MMM-yy">
                </SfDatePicker>
                <ValidationMessage For="@(() => Transh.Tanggal)" />
            </div>
            <div class="form-group">
                <SfComboBox TValue="string" TItem="ArCust" DataSource="Customers" Placeholder="Customer" FloatLabelType="FloatLabelType.Auto" @bind-Value="@Transh.Customer">
                    <DropDownListEvents TValue="string"  ValueChange="OnChangeCustomer"></DropDownListEvents>
                    <ComboBoxFieldSettings Text="NamaLengkap" Value="Customer"></ComboBoxFieldSettings>
                </SfComboBox>
                <ValidationMessage For="@(() => Transh.Customer)" />
            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@Transh.Keterangan" Multiline="true" Placeholder="Keterangan" FloatLabelType="FloatLabelType.Auto"></SfTextBox>
                <ValidationMessage For="@(() => Transh.Keterangan)" />
            </div>


            <div class="form-group">
                <SfComboBox TValue="string" TItem="IcLokasi" DataSource="lokasi" Placeholder="Masuk Lokasi" FloatLabelType="FloatLabelType.Auto" @bind-Value="@Transh.Lokasi">
                    <DropDownListEvents TValue="string"></DropDownListEvents>
                    <ComboBoxFieldSettings Text="NamaLokasi" Value="Lokasi"></ComboBoxFieldSettings>
                </SfComboBox>
                <ValidationMessage For="@(() => Transh.Lokasi)" />
            </div>

        </EditForm>


        <div class="details">

            <table class="table table-responsive">
                <thead>
                    <tr>
                        <td>Item</td>
                        <td>Nama Item</td>
                        <td>Satuan</td>
                        <td>Qty</td>
                        <td>Harga</td>
                        <td>Diskon</td>
                        <td>Jumlah</td>
                        <td>&nbsp;</td>
                    </tr>
                </thead>
                <tbody>
                    @if (Transh.OeTransDs != null)
                    {
                        @foreach (var detail in Transh.OeTransDs)
                        {
                            <tr>
                                <td>@detail.ItemCode</td>
                                <td>@detail.NamaItem</td>
                                <td>@detail.Satuan</td>
                                <td>@detail.Qty.ToString("#,##0.##")</td>
                                <td>@detail.Harga.ToString("#,##0.##")</td>
                                <td>@detail.Discount.ToString("#,##0.##")</td>
                                <td>@detail.UpdateJumlah.ToString("#,##0.##")</td>
                                <td>
                                    <SfButton CssClass="e-small e-success" IconCss="e-icons e-edit-icon" @onclick="(() => Rubah(detail))"></SfButton>
                                    <SfButton CssClass="e-small e-danger" IconCss="e-icons e-delete-icon" @onclick="(() => Hapus(detail))"></SfButton>
                                </td>
                            </tr>
                        }
                    }

                    <tr>
                        <td>
                            <SfButton CssClass="e-small e-link" IconCss="e-icons e-add-icon" @onclick="@OnAddLine">Add Line</SfButton>
                        </td>
                        <td></td>
                        <td></td>
                        <td> </td>

                    </tr>

                </tbody>
            </table>



        </div>
        <div class="float-md-left form-message">
            <span>Brutto   : @Transh.TtlJumlah.ToString("#,##0.##")</span>
        </div>

        <div class="form-group">

            <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transh.PpnPersen" Placeholder="Persen PPn" FloatLabelType="FloatLabelType.Auto" @onchange="rubahppn"></SfNumericTextBox>

        </div>
        <div class="form-group">
            <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transh.Ppn" Placeholder="PPn" FloatLabelType="FloatLabelType.Auto"></SfNumericTextBox>

        </div>

        <div class="form-group">

            <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transh.Ongkos" Placeholder="BIaya KOeim" FloatLabelType="FloatLabelType.Auto"></SfNumericTextBox>

        </div>

        <div class="float-md-left form-message">
            <span>Jumlah   : @Transh.Jumlah.ToString("#,##0.##")</span>
        </div>

        <div class="form-group">
            <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transh.DPayment" Placeholder="Uang Muka" FloatLabelType="FloatLabelType.Auto"></SfNumericTextBox>

        </div>
        <div class="float-md-left form-message">
            <span>Tagihan   : @Transh.Tagihan.ToString("#,##0.##")</span>
        </div>
    </div>
</div>

<SfDialog @bind-Visible="@IsVisible" Width="500px" ShowCloseIcon="true" IsModal="true">
    <DialogTemplates>
        <Content>
            <div class="form-group">
                <SfComboBox TValue="string" TItem="IcItem" DataSource="itemcode" Placeholder="Select Item" FloatLabelType="FloatLabelType.Auto" @bind-Value="@Transd.ItemCode">
                    <DropDownListEvents TValue="string" ValueChange="OnChangeItem"></DropDownListEvents>
                    <ComboBoxFieldSettings Text="NamaLengkap" Value="ItemCode"></ComboBoxFieldSettings>
                </SfComboBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@Transd.NamaItem" Multiline="true" Placeholder="Nama Item" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>

            <div class="container">
                <div class="row">
                    <div class="form-group col-md-6">
                        <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transd.Qty" Placeholder="Qty" FloatLabelType="FloatLabelType.Auto"></SfNumericTextBox>

                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transd.Harga" Placeholder="Harga" FloatLabelType="FloatLabelType.Auto"></SfNumericTextBox>

                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transd.Persen" Placeholder="Persen" FloatLabelType="FloatLabelType.Auto" OnChange="rubahDiskon"></SfNumericTextBox>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">

                        <SfNumericTextBox CssClass="e-outline" @bind-Value="@Transd.Discount" Placeholder="Discount" FloatLabelType="FloatLabelType.Auto"></SfNumericTextBox>

                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">

                        <span>@Transd.UpdateJumlah.ToString("#,##0.##")</span>


                    </div>
                </div>
            </div>


        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton OnClick="@OkClick" Content="OK" IsPrimary="true" />
        <DialogButton OnClick="@CancelClick" Content="Cancel" />
    </DialogButtons>
</SfDialog>


<SfToast ID="toast_default" @ref="ToastObj" Title="Delete Record" Content="@ToastContent" TimeOut="5000" Icon="e-meeting">
    <ToastPosition X="@ToastPosition"></ToastPosition>
</SfToast>

@code {

    [Parameter] public int Id { get; set; }
    private OeTransHView Transh = new OeTransHView() { OeTransDs = new List<OeTransDView>() };

    private OeTransH TransAll = new OeTransH() { OeTransDs = new List<OeTransD>() };

    private List<IcLokasi> lokasi;
    private List<IcItem> itemcode;
    private List<ArCust> Customers;
    private OeTransDView Transd = new OeTransDView();
    private OeTransDView TransK = new OeTransDView();


    //   private List<TransDView> TransDs = new List<TransDView>();
    private string enabled { get; set; }

    public int CustomerId { get; set; }
    public string namaItem { get; set; }
    public string namacustomer { get; set; }

    public int ItemId { get; set; }

    private bool IsVisible { get; set; } = false;
    private bool IsKurs { get; set; } = false;
    private bool IsEdit { get; set; } = false;

    SfToast ToastObj;
    private string ToastPosition = "Right";
    private string ToastContent { get; set; } = " ";

    private void ShowOnClick()
    {
        this.ToastObj.Show();
    }

    protected override async Task OnInitializedAsync()
    {
        // Transh.Tanggal = DateTime.Now;

        LoadCustomers();

        await Loadlokasi();
        await Loaditem();
        LoadTrans();
    }

    void LoadCustomers()
    {
        Customers = serviceAR.GetCustomer();
    }

    async Task Loadlokasi()
    {

        lokasi = await serviceInv.GetIcLokasi();

    }

    async Task Loaditem()
    {

        itemcode = await serviceInv.GetIcItem();

    }


    void LoadTrans()
    {
        TransAll = service.GetOeTrans(Id);
        Transh.OeTransHId = Id;
        Transh.NoLpb = TransAll.NoLpb;
        Transh.Tanggal = TransAll.Tanggal;
        Transh.Lokasi = TransAll.Lokasi;
        Transh.Customer = TransAll.Customer;
        Transh.NamaCust = TransAll.NamaCust;
        Transh.PpnPersen = TransAll.PpnPersen;
        Transh.Ppn = TransAll.Ppn;
        Transh.Ongkos = TransAll.Ongkos;
        Transh.DPayment = TransAll.DPayment;
        Transh.Keterangan = TransAll.Keterangan;

        this.namacustomer = TransAll.NamaCust;

        foreach (var item in TransAll.OeTransDs)
        {
            Transh.OeTransDs.Add(new OeTransDView
            {
                Jumlah = item.Jumlah,
                ItemCode = item.ItemCode,
                NamaItem = item.NamaItem,
                Satuan = item.Satuan,
                Qty = item.Qty,
                Persen = item.Persen,
                Discount = item.Discount,
                Harga = item.Harga,
                Cost = item.Cost,
                HrgCost = item.HrgCost,
                JumDpp = item.JumDpp

            });
        }
    }

    private void rubahppn()
    {

        var persen = Transh.TtlJumlah * (Transh.PpnPersen / 100);

        Transh.Ppn = persen;
    }


    private void rubahDiskon()
    {

        var price = Transd.Qty * Transd.Harga;
        var Discount = price * Transd.Persen / 100;
        Transd.Discount = Discount;
    }

    public void OnChangeCustomer(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        var customer = JsonConvert.DeserializeObject<ArCust>(args.ItemData != null ? args.ItemData.ToString() : "");
        this.namacustomer = customer.NamaCust;
    }

    public void OnChangeItem(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        var itemData = JsonConvert.DeserializeObject<IcItem>(args.ItemData != null ? args.ItemData.ToString() : "");
        if (itemData != null)
        {

            Transd.NamaItem = itemData.NamaItem;
            Transd.Satuan = itemData.Satuan;
            Transd.Harga = itemData.HrgJual;
            Transd.HrgCost = itemData.HrgNetto;

            //this.ItemId = itemData.IcItemId;
            //Transd.NamaItem = serviceInv.GetIcItemId(this.ItemId).NamaItem;
        }
    }


    private void OkClick()
    {
        this.IsVisible = false;
        this.IsKurs = false;
        if (Transd.ItemCode != null && !IsEdit)
        {
            Transh.OeTransDs.Add(new OeTransDView()
            {
                ItemCode = Transd.ItemCode,
                NamaItem = Transd.NamaItem,
                Satuan = Transd.Satuan,
                Harga = Transd.Harga,
                Qty = Transd.Qty,
                Lokasi = Transh.Lokasi,
                Persen = Transd.Persen,
                Discount = Transd.Discount,
                HrgCost = Transd.HrgCost,
                Cost = Transd.HrgCost * Transd.Qty,
                JumDpp = Transd.Qty * Transd.Harga,
                Jumlah = Transd.UpdateJumlah

                //   NamaItem = serviceInv.GetIcItemProduk(Transd.ItemCode).NamaItem,

            });
        }

        Transd = new OeTransDView();
    }



    private void CancelClick()
    {
        this.IsVisible = false;
        this.IsKurs = false;
        //    Transd = new TransDView();
        //    TransK = new TransDView();
    }

    private void OnAddLine()
    {

        this.IsVisible = true;

        IsEdit = false;
        ShowOnClick();

    }
    private void OnEditLine()
    {
        this.IsVisible = true;
        this.IsKurs = false;

        IsEdit = true;


    }

    private void OnBtnSimpan()
    {
        this.IsVisible = true;
        this.IsKurs = false;

    }


    private void Rubah(OeTransDView transd)
    {
        Transd = new OeTransDView();
        Transd = transd;
        OnEditLine();
    }

    private void Hapus(OeTransDView transd)
    {

        Transh.OeTransDs.Remove(transd);
        ShowOnClick();
    }

    private async Task HandleValidSubmit()
    {
        Transh.NamaCust = this.namacustomer;

        var newEdit = await service.EditTransH(Transh);
        if (newEdit)
        {
            //   await ExportToPdf(Transh);
        }
        navigationmanager.NavigateTo("TransOeLpb", false);
        //add = !add;
        //StateHasChanged();

    }
}
