@page "/EditCustomer/{Id:int}"
@using BMASoft.Data.Models
@using System.ComponentModel.DataAnnotations
@inject BMASoft.Services.IReceivableService service
@inject NavigationManager navigationmanager

<div class="container">
    <div class="master">
        <h2>Edit Customer</h2>

        <EditForm Model="@customer" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <br />
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@customer.Customer" Placeholder="Customer" FloatLabelType="FloatLabelType.Auto" disabled="disabled"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@customer.NamaCust" Placeholder="Nama Customer" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@customer.Alamat" Placeholder="Alamat" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@customer.Kota" Placeholder="Kota" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@customer.Telpon" Placeholder="Telpon/HP" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>

            <div class="float-md-right">
                <SfButton CssClass="e-primary" IconCss="e-icons e-save-icon" Type="submit">Simpan</SfButton>
            </div>


        </EditForm>

    </div>
</div>

@code{

    [Parameter] public int Id { get; set; }

    CustomerView customer = new CustomerView();
    ArCust Customer = new ArCust();

    protected override void OnInitialized()
    {
        // Transh.Tanggal = DateTime.Now;

        LoadCustomer();

    }

    void LoadCustomer()
    {
        Customer =  service.GetCustomerId(Id);
        customer.ArCustId = Customer.ArCustId;
        customer.Customer = Customer.Customer;
        customer.NamaCust = Customer.NamaCust;
        customer.Alamat = Customer.Alamat;
        customer.Kota = Customer.Kota;
        customer.Telpon = Customer.Telpon;

    }

    private async Task HandleValidSubmit()
    {

        var newEdit = await service.EditCustomer(customer);
        if (newEdit)
        {
            //   await ExportToPdf(Transh);
        }

        navigationmanager.NavigateTo("SetupCustomer", false);

        //add = !add;
        //StateHasChanged();

    }
}