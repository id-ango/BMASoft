@page "/EditApAkunSet/{Id:int}"
@using BMASoft.Data.Models
@using System.ComponentModel.DataAnnotations
@inject BMASoft.Services.IPayableService service
@inject NavigationManager navigationmanager

<div class="container">
    <div class="master">
        <h2>Edit Akun Set</h2>

        <EditForm Model="@supplier" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <br />
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@supplier.AcctSet" Placeholder="Akun Set" FloatLabelType="FloatLabelType.Auto" disabled="disabled"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@supplier.Description" Placeholder="Keterangan" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@supplier.Acct1" Placeholder="Akun 1" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@supplier.Acct2" Placeholder="Akun 2" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>
            <div class="form-group">
                <SfTextBox CssClass="e-outline" @bind-Value="@supplier.Acct3" Placeholder="Akun 3" FloatLabelType="FloatLabelType.Auto"></SfTextBox>

            </div>

            <div class="float-md-right">
                <SfButton CssClass="e-primary" IconCss="e-icons e-save-icon" Type="submit">Simpan</SfButton>
            </div>


        </EditForm>

    </div>
</div>

@code{

    [Parameter] public int Id { get; set; }

    ApAcctView supplier = new ApAcctView();
    ApAcct Supplier = new ApAcct();

    protected override void OnInitialized()
    {
        // Transh.Tanggal = DateTime.Now;

        LoadApAkunSet();

    }

    void LoadApAkunSet()
    {
        Supplier = service.GetApAkunSetId(Id);
        supplier.ApAcctId = Supplier.ApAcctId;
        supplier.Description = Supplier.Description;
        supplier.Acct1 = Supplier.Acct1;
        supplier.Acct2 = Supplier.Acct2;
        supplier.Acct3 = Supplier.Acct3;
    }

    private async Task HandleValidSubmit()
    {

        var newEdit = await service.EditAkunSet(supplier);
        if (newEdit)
        {
            //   await ExportToPdf(Transh);
        }

        navigationmanager.NavigateTo("SetupSupplier", false);

        //add = !add;
        //StateHasChanged();

    }
}