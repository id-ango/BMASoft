@page "/SetupSrcCode"
@using BMASoft.Data.Models
@using System.ComponentModel.DataAnnotations
@inject BMASoft.Services.IKasBankService service

<style>
    .e-edit-icon::before {
        content: '\ea9a';
    }

    .e-delete-icon::before {
        content: '\e94a';
    }
</style>

<div class="row">
    <div>
        <h1>Setup Source Code</h1>
    </div>

</div>
<div class="row">
    <SfButton @onclick="Tambah" CssClass="e-primary">Add</SfButton>

</div>
<br />
<br />

@if (toDoList == null)
{
    <p><em>Loading...</em></p>
}
@*else if (toDoList.Length == 0)
    {
        <p>No Record</p>
    }*@
else
{
    <div class="row">
        <div class="col-md-5">

            <CascadingValue Name="TambahBank" Value="banks">
                <CascadingValue Name="EditBank" Value="Rubahbanks">
                    <FieldSrcCode cekStatus="status" tombol="TblButton" Simpan="simpan"></FieldSrcCode>
                </CascadingValue>
            </CascadingValue>
        </div>
        <div class="col-md-7">
            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Kode</th>
                        <th>Nama</th>
                        <th>GL Akun</th>
                        <th>Group</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var toDoItem in toDoList)
                    {
                        <tr>
                            <td>

                                <SfButton CssClass="e-small e-success" IconCss="e-icons e-edit-icon" @onclick="(() => Rubah(toDoItem))"></SfButton>
                                <SfButton CssClass="e-small e-danger" IconCss="e-icons e-delete-icon" @onclick="(() => Hapus(toDoItem))"></SfButton>

                            </td>
                            <td>@toDoItem.SrcCode</td>
                            <td>@toDoItem.NamaSrc</td>
                            <td>@toDoItem.GlAcct</td>
                            <td>@toDoItem.Grp</td>

                            @*<td><input type="button" class="btn btn-primary" value="Edit" @onclick="(() => PrepareForEdit(toDoItem))" data-toggle="modal" data-target="#taskModal" /></td>
                                <td><input type="button" class="btn btn-danger" value="Delete" @onclick="(() => PrepareForDelete(toDoItem))" data-toggle="modal" data-target="#confirmDeleteModal" /></td>*@
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {

    private List<CbSrcCode> toDoList;
    private bool TblButton { get; set; } = true;


    private int status { get; set; }

    SrcCodeView banks = new SrcCodeView();
    SrcCodeView Rubahbanks = new SrcCodeView();


    protected override async Task OnInitializedAsync()
    {

        await LoadBank();

    }

    async Task LoadBank()
    {
        toDoList = await service.GetSrcCode();
    }

    private void simpan(bool jadisimpan)
    {
        TblButton = jadisimpan;
        Tambah();

    }

    private async void Tambah()
    {
        status = 1;
        TblButton = !TblButton;
        await LoadBank();
        StateHasChanged();
    }
    private async void Rubah(CbSrcCode xKdBank)
    {
        Rubahbanks.SrcCodeId = xKdBank.CbSrcCodeId;
        Rubahbanks.SrcCode = xKdBank.SrcCode;
        Rubahbanks.NamaSrc = xKdBank.NamaSrc;

        status = 2;
        TblButton = !TblButton;
        await LoadBank();
        StateHasChanged();

    }

    private async void Hapus(CbSrcCode xKdBank)
    {
        Rubahbanks.SrcCodeId = xKdBank.CbSrcCodeId;
        Rubahbanks.SrcCode = xKdBank.SrcCode;
        Rubahbanks.NamaSrc = xKdBank.NamaSrc;

        status = 3;
        TblButton = !TblButton;
        await LoadBank();
        StateHasChanged();
    }


}