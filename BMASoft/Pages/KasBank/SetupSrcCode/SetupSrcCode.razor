@page "/SetupSrcCode"
@using BMASoft.Data.Models
@using System.ComponentModel.DataAnnotations
@inject BMASoft.Services.IKasBankService service
@inject NavigationManager navigationmanager

<style>
    .e-edit-icon::before {
        content: '\ea9a';
    }

    .e-delete-icon::before {
        content: '\e94a';
    }

    hurufbesar {
        text-transform: uppercase;
    }
</style>


@if (true)
{
    <div class="container">
        <div class="row">
            <div class="col-md-6">

                <h1>Setup Source Code</h1>
                <SfButton @onclick="Tambah" CssClass="e-primary">Add</SfButton>

                <br />
                <br />
            </div>

        </div>
    </div>

    <div class="col-md-12">
        @if (toDoList == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {

            <SfGrid DataSource="@toDoList" AllowGrouping="true" AllowSorting="true" Width="auto" Height="310" Toolbar="@(new List<string>() {"Print", "Search" })">

                <GridColumns>

                    <GridColumn HeaderText="" Width="50">
                        <Template>
                            @{
                                var trans2 = (context as CbSrcCode);

                                <SfButton CssClass="e-small e-success" IconCss="e-icons e-edit-icon" @onclick="(() => Rubah(trans2.CbSrcCodeId))"></SfButton>
                                <SfButton CssClass="e-small e-danger" IconCss="e-icons e-delete-icon" @onclick="(() => Hapus(trans2.CbSrcCodeId))"></SfButton>

                            }

                        </Template>

                    </GridColumn>

                    <GridColumn Field=@nameof(CbSrcCode.SrcCode) HeaderText="Source Code" Width="60"></GridColumn>
                    <GridColumn Field=@nameof(CbSrcCode.NamaSrc) HeaderText="Keterangan" Width="170"></GridColumn>
                    <GridColumn Field=@nameof(CbSrcCode.GlAcct) HeaderText=" GL Akun" Width="70"></GridColumn>
                    <GridColumn Field=@nameof(CbSrcCode.Grp) HeaderText="Group" Width="70"></GridColumn>
                </GridColumns>
            </SfGrid>


        }
    </div>

    <SfDialog @bind-Visible="@IsHapus" Width="400px" ShowCloseIcon="true" IsModal="true">
        <DialogTemplates>
            <Header>
                Delete Items
            </Header>
            <Content>
                Are you sure you want to permanently delete these items ?
            </Content>
        </DialogTemplates>

        <DialogButtons>
            <DialogButton OnClick="@OkkClick" Content="OK" IsPrimary="true" />
            <DialogButton OnClick="@CancelClick" Content="Cancel" />
        </DialogButtons>
    </SfDialog>


}




@code {

    private List<CbSrcCode> toDoList;
    private bool TblButton { get; set; } = true;
    private bool IsAdd { get; set; } = false;
    private bool IsRubah { get; set; } = false;
    private bool IsHapus { get; set; } = false;

    private int status { get; set; }

    BankView banks = new BankView();




    protected override async Task OnInitializedAsync()
    {

        await LoadBank();

    }

    async Task LoadBank()
    {

        toDoList = await service.GetSrcCode();


    }

    private void simpan(bool jadisimpan)
    {
        TblButton = jadisimpan;
        Tambah();

    }

    private void Tambah()
    {
        navigationmanager.NavigateTo("AddCbSrcCode");
    }

    private void Rubah(int xKdBank)
    {
        navigationmanager.NavigateTo($"EditCbSrcCode/{xKdBank}");
    }

    private void Hapus(int xKdBank)
    {
        this.IsHapus = true;
        this.status = xKdBank;


    }

    private async void OkkClick()
    {

        var HapusStatus = await service.DelSrcCode(this.status);
        this.IsHapus = false;

        //      StateHasChanged();

        navigationmanager.NavigateTo("SetupCbSrcCode", true);
        //  await LoadBank();
        //  await OnInitializedAsync();
    }

    private void CancelClick()
    {

        this.IsHapus = false;

        //    StateHasChanged();

        navigationmanager.NavigateTo("SetupCbSrcCode", false);
        //    await LoadBank();
        //      await OnInitializedAsync();
    }

}